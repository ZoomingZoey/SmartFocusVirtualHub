import Head from 'next/head';
import { useState } from "react";

import HubNavBar from '../../components/HubNavBar';
import ImageHeader from '../../components/ImageHeader';
import TextSection from '../../components/TextSection';
import FilterSelection from '../../components/FilterSelection';
import ArticleCardGrid from "../../components/ArticleCardGrid";
import Footer from '../../components/Footer';
import { getStrapiURL, fetchAPI, sortArticlesByDate } from '../../lib/api';
import { filterArticles } from '../../lib/helpers';
const qs = require('qs');

// Import react-bootstrap components
import {
  Container,
  Row,
  Col,
  Button
 } from 'react-bootstrap';

const ResearchPapersAndCaseStudies = ({ global, page_content, allArticles, query }) => {
  // const router = useRouter();
  // const query = router.query;
  // const data = query.name;

  const { content, cluster } = query;

  const contentTypeOptions = ['All', 'Research Papers', 'Case Studies'];
  const clusterOptions = ['All', 'Horticulture', 'Environment', 'Technology'];

  const [articles, setArticles] = useState(allArticles);

  const handleFilterChange = (filters) => {
    const filtered = filterArticles(allArticles, filters);
    setArticles(filtered);
  }

  return (
    <>
      <Head>
        <title>Research Papers and Case Studies - Smart Focus</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HubNavBar logo={getStrapiURL(global.attributes.site_logo.data.attributes.url)}/>
      <ImageHeader size="sm" src={getStrapiURL(page_content.attributes.header_image.data.attributes.url)}>
        <div className='d-flex justify-content-center align-items-center w-100' style={{height: '85%'}}>
          <h1 className='text-white text-center intro-heading d-block'>Research Papers and Case Studies</h1>
        </div>
      </ImageHeader>
      <Container className='pb-5'>
      	{page_content.attributes.content.map((content) => (
          <TextSection key={content.id} heading={content.heading} text={content.text_content}/>
        ))}
        <FilterSelection
          contentFilterOptions={contentTypeOptions}
          clusterFilterOptions={clusterOptions}
          contentTypeDefault={content}
          clusterTypeDefault={cluster}
          onChange={handleFilterChange}
        />
        <ArticleCardGrid articles={articles} prefixType/>
      </Container>
      <Footer logoSrc={getStrapiURL(global.attributes.site_logo.data.attributes.url)} email={global.attributes.contact_email} phone={global.attributes.phone} address={global.attributes.address}/>
    </>
  );
}
 
export default ResearchPapersAndCaseStudies;

export async function getServerSideProps(ctx) {
  const { query } = ctx;

  const query_global = qs.stringify({
    populate: '*'
  }, {
    encodeValuesOnly: true,
  });
  const global = await fetchAPI(`/global?${query_global}`);

  const query_page = qs.stringify({
    populate: {
      header_image: {
        populate: '*'
      },
      content: {
        populate: '*'
      },
    }
  }, {
    encodeValuesOnly: true,
  });
  const page_content = await fetchAPI(`/research-papers-and-case-studies-page?${query_page}`);

  const query_articles = qs.stringify({
    populate: {
      clusters: {
        fields: ['name']
      },
      thumbnail_image: {
        fields: ['url']
      }
    }
  }, {
    encodeValuesOnly: true,
  });

  const research_papers = await fetchAPI(`/research-papers?${query_articles}`);

  const case_studies = await fetchAPI(`/case-studies?${query_articles}`);

  const allArticles = sortArticlesByDate([...research_papers, ...case_studies]);

  return {
    props: {
      global,
      page_content,
      allArticles,
      query
    }
  }
}